[gd_scene load_steps=9 format=2]

[ext_resource path="res://font/seguisb.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://Rock.png" type="Texture" id=2]
[ext_resource path="res://Paper.png" type="Texture" id=3]
[ext_resource path="res://Scissors.png" type="Texture" id=4]
[ext_resource path="res://Lizard.png" type="Texture" id=5]
[ext_resource path="res://Spock.png" type="Texture" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

var player_wins = 0
var tie_games = 0
var computer_wins = 0

export(int)var minX = 720
export(int)var minY = 540

onready var label = $Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer/MarginContainer/Label

onready var label2 = $Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer/MarginContainer2/Label2

onready var label3 = $Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer/MarginContainer3/Label3

class RPSLS:
	var _choice

	var _counter1
	var _counter2

	var _win_against1
	var _win_against2

	var quote1
	var quote2

	func _init(choice, c1, c2, w1, w2, q1, q2) -> void:
		quote1 = q1
		quote2 = q2
		_choice = choice
		_counter1 = c1
		_counter2 = c2
		_win_against1 = w1
		_win_against2 = w2

	func decide(other):
		var n = other._choice
		if n == _choice:
			print(\"Tie.\")
			return -1
		elif n == _counter1 or n == _counter2:
			other.decide(self)
			return 0
		elif n == _win_against1:
			print(quote1)
			return 1
		elif n == _win_against2:
			print(quote2)
			return 1

var rock
var paper
var scissors
var lizard
var spock

const ROCK = 0
const PAPER = 1
const SCISSORS = 2
const LIZARD = 3
const SPOCK = 4

var cpu_choices

var cpu_choice = -1

func computer_choice():
	cpu_choice = cpu_choices[randi() % len(cpu_choices)]

func check_game(player):
	var c = cpu_choice.decide(player)
	if c == 1:
		computer_wins += 1
	elif c == 0:
		player_wins += 1
	else:
		tie_games += 1
	computer_choice()

var connection

func _player_connected(id):
	# Called on both clients and server when a peer connects. Send my info to it.
	#rpc_id(id, \"register_player\", player_name)
	print(\"player connected\")

func _player_disconnected(id):
	print(\"disconnected\")

func _connected_ok():
	print(\"connected ok\")

func _server_disconnected():
	print(\"server gone\")

func _connected_fail():
	print(\"connected fail\")

func _ready() -> void:
	get_tree().connect(\"network_peer_connected\", self, \"_player_connected\")
	get_tree().connect(\"network_peer_disconnected\", self, \"_player_disconnected\")
	get_tree().connect(\"connected_to_server\", self, \"_connected_ok\")
	get_tree().connect(\"connection_failed\", self, \"_connected_fail\")
	get_tree().connect(\"server_disconnected\", self, \"_server_disconnected\")

	var output = []
	OS.execute(\"curl\", [\"ifconfig.me\"], true, output)

	print(output)

	$Panel/YourIp.text = \"UR IP:\\n\" + str(output[0])

	randomize()

	rock = RPSLS.new(ROCK, PAPER, SPOCK, LIZARD, SCISSORS, \"Rock crushes lizard.\", \"Rock crushes scissors.\")

	paper = RPSLS.new(PAPER, LIZARD, SCISSORS, SPOCK, ROCK, \"Paper disproves Spock.\", \"Paper covers rock.\")

	scissors = RPSLS.new(SCISSORS, SPOCK, ROCK, PAPER, LIZARD, \"Scissors cuts paper.\", \"Scissors decapitates lizard.\")

	lizard = RPSLS.new(LIZARD, ROCK, SCISSORS, SPOCK, PAPER, \"Lizard poisons Spock.\", \"Lizard eats paper.\")

	spock = RPSLS.new(SPOCK, LIZARD, PAPER, ROCK, SCISSORS, \"Spock vaporizes rock.\", \"Spock smashes scissors.\")

	cpu_choices = [rock, paper, scissors, lizard, spock]

	computer_choice()

	get_node(\"/root\").connect(\"size_changed\", self, \"resize\")

func _input(event: InputEvent) -> void:
	pass

func _process(delta: float) -> void:

	label.text = \"Player Wins: %s\" % player_wins

	label2.text = \"Tie Games: %s\" % tie_games

	label3.text = \"Computer Wins: %s\" % computer_wins


func resize():
    var currentSize = OS.get_window_size()

    if(currentSize.x < minX):
        OS.set_window_size(Vector2(minX, currentSize.y))

    if(currentSize.y < minY):
        OS.set_window_size(Vector2(currentSize.x, minY))

func _on_TextureButton_pressed() -> void:
	print(\"Rock\")
	check_game(rock)

func _on_TextureButton2_pressed() -> void:
	print(\"paper\")
	check_game(paper)

func _on_TextureButton3_pressed() -> void:
	print(\"scissors\")
	check_game(scissors)

func _on_TextureButton4_pressed() -> void:
	print(\"lizard\")
	check_game(lizard)

func _on_TextureButton5_pressed() -> void:
	print(\"spock\")
	check_game(spock)

func _on_Connect_pressed() -> void:
	get_tree().set_network_peer(null)
	print(\"joining server\")
	connection = NetworkedMultiplayerENet.new()
	var ip = $Panel/IP.text.strip_edges()
	print(connection.create_client(ip, 4567))
	get_tree().set_network_peer(connection)

func _on_Button_pressed() -> void:
	get_tree().set_network_peer(null)
	print(\"creating server\")
	connection = NetworkedMultiplayerENet.new()
	connection.create_server(4567, 2)
	get_tree().set_network_peer(connection)

func send_message():
	rpc(\"write\", $Panel/ChatInput.text)
	$Panel/ChatInput.text = \"\"

remotesync func write(msg):
	print(\"hi\")
	$Panel/Chat.text += msg

func _on_Send_Message_pressed() -> void:
	send_message()"

[sub_resource type="DynamicFont" id=2]
font_data = ExtResource( 1 )

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 1 )

[node name="Panel" type="Panel" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 1024, 600 )

[node name="CenterContainer" type="CenterContainer" parent="Panel"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="VBoxContainer" type="VBoxContainer" parent="Panel/CenterContainer"]
editor/display_folded = true
margin_left = 90.0
margin_right = 933.0
margin_bottom = 602.0

[node name="MarginContainer4" type="MarginContainer" parent="Panel/CenterContainer/VBoxContainer"]
margin_right = 843.0
margin_bottom = 93.0
size_flags_vertical = 0
custom_constants/margin_right = 60
custom_constants/margin_left = 60
custom_constants/margin_bottom = 50

[node name="CenterContainer" type="CenterContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4"]
margin_left = 60.0
margin_right = 783.0
margin_bottom = 43.0

[node name="HBoxContainer" type="HBoxContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer"]
margin_right = 723.0
margin_bottom = 43.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="MarginContainer" type="MarginContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer"]
margin_right = 231.0
margin_bottom = 43.0
size_flags_horizontal = 3
size_flags_vertical = 0
custom_constants/margin_right = 70
custom_constants/margin_top = 10
custom_constants/margin_left = 70
custom_constants/margin_bottom = 10

[node name="Label" type="Label" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer/MarginContainer"]
margin_left = 70.0
margin_top = 10.0
margin_right = 161.0
margin_bottom = 33.0
size_flags_horizontal = 3
custom_fonts/font = SubResource( 2 )
text = "Player Wins: "

[node name="MarginContainer2" type="MarginContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer"]
margin_left = 235.0
margin_right = 458.0
margin_bottom = 43.0
size_flags_horizontal = 3
size_flags_vertical = 0
custom_constants/margin_right = 70
custom_constants/margin_top = 10
custom_constants/margin_left = 70
custom_constants/margin_bottom = 10

[node name="Label2" type="Label" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer/MarginContainer2"]
margin_left = 70.0
margin_top = 10.0
margin_right = 153.0
margin_bottom = 33.0
size_flags_horizontal = 3
custom_fonts/font = SubResource( 2 )
text = "Tie Games: "

[node name="MarginContainer3" type="MarginContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer"]
margin_left = 462.0
margin_right = 723.0
margin_bottom = 43.0
size_flags_horizontal = 3
size_flags_vertical = 0
custom_constants/margin_right = 70
custom_constants/margin_top = 10
custom_constants/margin_left = 70
custom_constants/margin_bottom = 10

[node name="Label3" type="Label" parent="Panel/CenterContainer/VBoxContainer/MarginContainer4/CenterContainer/HBoxContainer/MarginContainer3"]
margin_left = 70.0
margin_top = 10.0
margin_right = 191.0
margin_bottom = 33.0
size_flags_horizontal = 3
custom_fonts/font = SubResource( 2 )
text = "Computer Wins: "

[node name="MarginContainer2" type="MarginContainer" parent="Panel/CenterContainer/VBoxContainer"]
margin_top = 97.0
margin_right = 843.0
margin_bottom = 602.0

[node name="VBoxContainer" type="VBoxContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2"]
margin_right = 843.0
margin_bottom = 505.0

[node name="CenterContainer" type="CenterContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer"]
margin_right = 843.0
margin_bottom = 245.0

[node name="HBoxContainer" type="HBoxContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer"]
margin_left = 101.0
margin_right = 742.0
margin_bottom = 245.0

[node name="TextureButton" type="TextureButton" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer/HBoxContainer"]
margin_right = 211.3
margin_bottom = 245.88
rect_min_size = Vector2( 211.3, 245.88 )
size_flags_horizontal = 0
size_flags_vertical = 0
size_flags_stretch_ratio = 0.0
texture_normal = ExtResource( 2 )
expand = true
stretch_mode = 3

[node name="TextureButton2" type="TextureButton" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer/HBoxContainer"]
margin_left = 215.0
margin_right = 426.3
margin_bottom = 245.88
rect_min_size = Vector2( 211.3, 245.88 )
size_flags_horizontal = 0
size_flags_vertical = 0
size_flags_stretch_ratio = 0.0
texture_normal = ExtResource( 3 )
expand = true
stretch_mode = 3

[node name="TextureButton3" type="TextureButton" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer/HBoxContainer"]
margin_left = 430.0
margin_right = 641.3
margin_bottom = 245.88
rect_min_size = Vector2( 211.3, 245.88 )
size_flags_horizontal = 0
size_flags_vertical = 0
size_flags_stretch_ratio = 0.0
texture_normal = ExtResource( 4 )
expand = true
stretch_mode = 3

[node name="CenterContainer2" type="CenterContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer"]
margin_top = 249.0
margin_right = 843.0
margin_bottom = 505.0

[node name="HBoxContainer2" type="HBoxContainer" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer2"]
margin_left = 163.0
margin_right = 679.0
margin_bottom = 256.0

[node name="TextureButton4" type="TextureButton" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer2/HBoxContainer2"]
margin_right = 256.0
margin_bottom = 256.0
texture_normal = ExtResource( 5 )
stretch_mode = 2

[node name="TextureButton5" type="TextureButton" parent="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer2/HBoxContainer2"]
margin_left = 260.0
margin_right = 516.0
margin_bottom = 256.0
texture_normal = ExtResource( 6 )
stretch_mode = 2

[node name="Button" type="Button" parent="Panel"]
margin_left = 874.239
margin_top = 87.5346
margin_right = 932.239
margin_bottom = 107.535
text = "CREATE"

[node name="IP" type="TextEdit" parent="Panel"]
margin_left = 28.1357
margin_top = 17.759
margin_right = 198.136
margin_bottom = 68.759

[node name="YourIp" type="TextEdit" parent="Panel"]
margin_left = 857.0
margin_top = 13.0
margin_right = 967.0
margin_bottom = 69.0
text = "YOUR IP:
192.168.1.1"

[node name="Chat" type="TextEdit" parent="Panel"]
margin_left = 22.0
margin_top = 121.0
margin_right = 173.0
margin_bottom = 501.0
readonly = true
wrap_enabled = true

[node name="ChatInput" type="TextEdit" parent="Panel"]
margin_left = 23.4598
margin_top = 512.784
margin_right = 227.46
margin_bottom = 562.784

[node name="Connect" type="Button" parent="Panel"]
margin_left = 62.0499
margin_top = 83.1025
margin_right = 135.05
margin_bottom = 103.103
text = "CONNECT"

[node name="Send Message" type="Button" parent="Panel"]
margin_left = 89.7507
margin_top = 571.745
margin_right = 162.751
margin_bottom = 591.745
text = "Send"

[connection signal="pressed" from="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer/HBoxContainer/TextureButton" to="." method="_on_TextureButton_pressed"]
[connection signal="pressed" from="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer/HBoxContainer/TextureButton2" to="." method="_on_TextureButton2_pressed"]
[connection signal="pressed" from="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer/HBoxContainer/TextureButton3" to="." method="_on_TextureButton3_pressed"]
[connection signal="pressed" from="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer2/HBoxContainer2/TextureButton4" to="." method="_on_TextureButton4_pressed"]
[connection signal="pressed" from="Panel/CenterContainer/VBoxContainer/MarginContainer2/VBoxContainer/CenterContainer2/HBoxContainer2/TextureButton5" to="." method="_on_TextureButton5_pressed"]
[connection signal="pressed" from="Panel/Button" to="." method="_on_Button_pressed"]
[connection signal="pressed" from="Panel/Connect" to="." method="_on_Connect_pressed"]
[connection signal="pressed" from="Panel/Send Message" to="." method="_on_Send_Message_pressed"]
